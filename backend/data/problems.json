[
  {
    "slug": "two-sum",
    "id": "prob001",
    "title": "Two Sum",
    "description": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice.",
    "difficulty": "Easy",
    "tags": [
      "Arrays",
      "Hash Table"
    ],
    "solvedBy": [],
    "input": "An array of integers nums and an integer target.",
    "codeStubs": [
      {
        "cpp": "vector<int> twoSum(vector<int>& nums, int target) {\n    // Your code here\n}",
        "java": "public int[] twoSum(int[] nums, int target) {\n    // Your code here\n    return new int[]{0,0};\n}",
        "python": "def two_sum(nums, target):\n    # Your code here\n    pass",
        "js": "function twoSum(nums, target) {\n    // Your code here\n}"
      }
    ],
    "output": [
      {
        "cpp": "vector<int>",
        "java": "int[]",
        "python": "list",
        "js": "array"
      }
    ],
    "constraints": "2 <= nums.length <= 10^4\n-10^9 <= nums[i] <= 10^9\n-10^9 <= target <= 10^9\nOnly one valid answer exists.",
    "timelimit": 1,
    "createdBy": "admin",
    "testCases": [
      {
        "input": "[2,7,11,15]\n9",
        "output": "[0,1]",
        "sample": true,
        "explanation": "Because nums[0] + nums[1] == 9, we return [0, 1]."
      }
    ]
  },

  {
    "slug": "Add-Two-Numbers",
    "id": "prob002",
    "title": "Add two Numbers",
    "description": "You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.You may assume the two numbers do not contain any leading zero, except the number 0 itself.",
    "difficulty": "Medium",
    "tags": [
      "Linked List",
      "Math", 
      "Recursion"
    ],
    "solvedBy": [],
    "input": "An array of integers nums and an integer target.",
    "codeStubs": [
      {
        "cpp": "vector<int> twoSum(vector<int>& nums, int target) {\n    // Your code here\n}",
        "java": "public int[] twoSum(int[] nums, int target) {\n    // Your code here\n    return new int[]{0,0};\n}",
        "python": "def two_sum(nums, target):\n    # Your code here\n    pass",
        "js": "function twoSum(nums, target) {\n    // Your code here\n}"
      }
    ],
    "output": [
      {
        "cpp": "vector<int>",
        "java": "int[]",
        "python": "list",
        "js": "array"
      }
    ],
    "constraints": "The number of nodes in each linked list is in the range [1, 100].\n0 <= Node.val <= 9\nIt is guaranteed that the list represents a number that does not have leading zeros.",
    "timelimit": 1,
    "createdBy": "admin",
    "testCases": [
      {
        "input": "l1=[2,4,3],\tl2=[5,6,4]\n9",
        "output": "[7,0,8]",
        "sample": true,
        "explanation": "342+465 = 807"
      }
    ]
  }
]